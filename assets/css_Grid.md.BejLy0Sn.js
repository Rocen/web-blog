import{_ as i,c as a,o as n,ae as t}from"./chunks/framework.Bl5GZLa3.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"css/Grid.md","filePath":"css/Grid.md"}'),l={name:"css/Grid.md"};function h(e,s,p,k,r,d){return n(),a("div",null,s[0]||(s[0]=[t(`<p>以下是 CSS3 <strong>Grid 布局</strong>的详细解析，它是一种强大的二维布局系统，适用于复杂页面结构的设计，能够精确控制行和列，实现灵活且响应式的布局。</p><hr><h3 id="一、核心概念" tabindex="-1"><strong>一、核心概念</strong> <a class="header-anchor" href="#一、核心概念" aria-label="Permalink to &quot;**一、核心概念**&quot;">​</a></h3><ol><li><p><strong>Grid 容器（Grid Container）</strong><br> 通过 <code>display: grid</code> 或 <code>display: inline-grid</code> 将元素定义为网格容器，其直接子元素成为 <strong>Grid 项目（Grid Item）</strong>。</p></li><li><p><strong>网格轨道（Grid Track）</strong></p><ul><li><strong>行（Rows）</strong>：水平轨道，由 <code>grid-template-rows</code> 定义。</li><li><strong>列（Columns）</strong>：垂直轨道，由 <code>grid-template-columns</code> 定义。</li></ul></li><li><p><strong>网格线（Grid Line）</strong><br> 网格轨道的分界线，用于定位项目（编号从 1 开始）。</p></li><li><p><strong>网格单元格（Grid Cell）</strong><br> 行和列交叉形成的单个单元格。</p></li><li><p><strong>网格区域（Grid Area）</strong><br> 由多个单元格组成的矩形区域，通过 <code>grid-template-areas</code> 命名。</p></li></ol><p><img src="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Basic_Concepts_of_Grid_Layout/grid.png" alt="Grid 布局示意图"></p><hr><h3 id="二、容器-container-的属性" tabindex="-1"><strong>二、容器（Container）的属性</strong> <a class="header-anchor" href="#二、容器-container-的属性" aria-label="Permalink to &quot;**二、容器（Container）的属性**&quot;">​</a></h3><p>以下属性作用于 <strong>Grid 容器</strong>，定义整体网格结构。</p><h4 id="_1-定义网格轨道" tabindex="-1">1. <strong>定义网格轨道</strong> <a class="header-anchor" href="#_1-定义网格轨道" aria-label="Permalink to &quot;1. **定义网格轨道**&quot;">​</a></h4><ul><li><code>grid-template-columns</code>：定义列宽（支持 <code>px</code>, <code>fr</code>, <code>auto</code>, <code>minmax()</code> 等）。</li><li><code>grid-template-rows</code>：定义行高。</li><li><code>grid-template-areas</code>：通过命名区域布局。</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">grid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-columns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 3列：100px、剩余空间的1:2比例 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-rows</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> auto</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 120</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 3行 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-areas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;header header header&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;sidebar main main&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;footer footer footer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="_2-间距控制" tabindex="-1">2. <strong>间距控制</strong> <a class="header-anchor" href="#_2-间距控制" aria-label="Permalink to &quot;2. **间距控制**&quot;">​</a></h4><ul><li><code>gap</code>：简写属性，设置行和列的间距（替代旧的 <code>grid-gap</code>）。 <ul><li><code>row-gap</code>：行间距。</li><li><code>column-gap</code>：列间距。</li></ul></li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  gap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 行间距20px，列间距10px */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="_3-隐式网格控制" tabindex="-1">3. <strong>隐式网格控制</strong> <a class="header-anchor" href="#_3-隐式网格控制" aria-label="Permalink to &quot;3. **隐式网格控制**&quot;">​</a></h4><p>当项目超出显式定义的网格时，自动生成隐式轨道：</p><ul><li><code>grid-auto-rows</code>：隐式行的高度。</li><li><code>grid-auto-columns</code>：隐式列的宽度。</li><li><code>grid-auto-flow</code>：自动放置项目的方向（<code>row</code>、<code>column</code>、<code>dense</code>）。</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-auto-rows</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 新增行默认高度60px */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-auto-flow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dense</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 密集填充空白 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="_4-对齐方式" tabindex="-1">4. <strong>对齐方式</strong> <a class="header-anchor" href="#_4-对齐方式" aria-label="Permalink to &quot;4. **对齐方式**&quot;">​</a></h4><ul><li><code>justify-items</code>：所有项目在 <strong>列方向（水平）</strong> 的对齐方式（<code>start</code>、<code>end</code>、<code>center</code>、<code>stretch</code>）。</li><li><code>align-items</code>：所有项目在 <strong>行方向（垂直）</strong> 的对齐方式。</li><li><code>justify-content</code>：整个网格在容器中的水平对齐方式（当网格总宽度小于容器时）。</li><li><code>align-content</code>：整个网格在容器中的垂直对齐方式。</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  justify-items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 所有项目水平居中 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  align-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">space-between</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 网格整体垂直两端对齐 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><hr><h3 id="三、项目-item-的属性" tabindex="-1"><strong>三、项目（Item）的属性</strong> <a class="header-anchor" href="#三、项目-item-的属性" aria-label="Permalink to &quot;**三、项目（Item）的属性**&quot;">​</a></h3><p>以下属性作用于 <strong>Grid 项目</strong>，控制项目在网格中的位置和尺寸。</p><h4 id="_1-位置控制" tabindex="-1">1. <strong>位置控制</strong> <a class="header-anchor" href="#_1-位置控制" aria-label="Permalink to &quot;1. **位置控制**&quot;">​</a></h4><ul><li><code>grid-column-start</code> / <code>grid-column-end</code>：项目占据的列范围。</li><li><code>grid-row-start</code> / <code>grid-row-end</code>：项目占据的行范围。</li><li>简写： <ul><li><code>grid-column: 1 / 3</code> → 从第1列到第3列。</li><li><code>grid-row: span 2</code> → 跨2行。</li></ul></li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 占据第1到第2列 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 占据第2到第3行 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="_2-命名区域定位" tabindex="-1">2. <strong>命名区域定位</strong> <a class="header-anchor" href="#_2-命名区域定位" aria-label="Permalink to &quot;2. **命名区域定位**&quot;">​</a></h4><p>通过 <code>grid-area</code> 将项目分配到命名区域：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.header</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-area</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: header; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 对应 grid-template-areas 中的名称 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="_3-对齐单个项目" tabindex="-1">3. <strong>对齐单个项目</strong> <a class="header-anchor" href="#_3-对齐单个项目" aria-label="Permalink to &quot;3. **对齐单个项目**&quot;">​</a></h4><ul><li><code>justify-self</code>：覆盖容器的 <code>justify-items</code>，控制单个项目的水平对齐。</li><li><code>align-self</code>：覆盖容器的 <code>align-items</code>，控制单个项目的垂直对齐。</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  justify-self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 项目右侧对齐 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  align-self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 项目垂直居中 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="_4-层级控制" tabindex="-1">4. <strong>层级控制</strong> <a class="header-anchor" href="#_4-层级控制" aria-label="Permalink to &quot;4. **层级控制**&quot;">​</a></h4><ul><li><code>z-index</code>：调整项目在网格中的层叠顺序。</li></ul><hr><h3 id="四、关键单位与函数" tabindex="-1"><strong>四、关键单位与函数</strong> <a class="header-anchor" href="#四、关键单位与函数" aria-label="Permalink to &quot;**四、关键单位与函数**&quot;">​</a></h3><ol><li><p><strong><code>fr</code> 单位</strong><br> 按比例分配剩余空间（类似 Flex 的 <code>flex-grow</code>）。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">grid-template-columns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 1fr 2fr; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 两列，宽度比例为1:2 */</span></span></code></pre></div></li><li><p><strong><code>minmax(min, max)</code></strong><br> 定义轨道的最小和最大尺寸。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">grid-template-columns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: minmax(100px, 1fr);</span></span></code></pre></div></li><li><p><strong><code>repeat()</code></strong><br> 重复定义轨道，简化代码。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">grid-template-columns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: repeat(3, 1fr); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 3列等宽 */</span></span></code></pre></div></li></ol><hr><h3 id="五、典型应用场景" tabindex="-1"><strong>五、典型应用场景</strong> <a class="header-anchor" href="#五、典型应用场景" aria-label="Permalink to &quot;**五、典型应用场景**&quot;">​</a></h3><h4 id="_1-圣杯布局-holy-grail-layout" tabindex="-1">1. <strong>圣杯布局（Holy Grail Layout）</strong> <a class="header-anchor" href="#_1-圣杯布局-holy-grail-layout" aria-label="Permalink to &quot;1. **圣杯布局（Holy Grail Layout）**&quot;">​</a></h4><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">grid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-columns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 200</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-rows</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 80</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-areas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;header header header&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;left main right&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;footer footer footer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">vh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.header</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">grid-area</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: header; }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">grid-area</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">grid-area</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: main; }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.right</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">grid-area</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">right</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.footer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">grid-area</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: footer; }</span></span></code></pre></div><h4 id="_2-响应式布局" tabindex="-1">2. <strong>响应式布局</strong> <a class="header-anchor" href="#_2-响应式布局" aria-label="Permalink to &quot;2. **响应式布局**&quot;">​</a></h4><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">grid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-columns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">repeat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">auto-fit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">minmax</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">250</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  gap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 效果：自动适应容器宽度，项目最小250px，自动换行 */</span></span></code></pre></div><h4 id="_3-卡片网格" tabindex="-1">3. <strong>卡片网格</strong> <a class="header-anchor" href="#_3-卡片网格" aria-label="Permalink to &quot;3. **卡片网格**&quot;">​</a></h4><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">grid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-columns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">repeat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  gap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><hr><h3 id="六、grid-vs-flexbox" tabindex="-1"><strong>六、Grid vs Flexbox</strong> <a class="header-anchor" href="#六、grid-vs-flexbox" aria-label="Permalink to &quot;**六、Grid vs Flexbox**&quot;">​</a></h3><table tabindex="0"><thead><tr><th><strong>特性</strong></th><th><strong>Grid</strong></th><th><strong>Flexbox</strong></th></tr></thead><tbody><tr><td><strong>维度</strong></td><td>二维（行 + 列）</td><td>一维（行 或 列）</td></tr><tr><td><strong>适用场景</strong></td><td>复杂布局（如整个页面结构）</td><td>单行/单列布局（如导航栏）</td></tr><tr><td><strong>内容优先 vs 布局优先</strong></td><td>布局优先（先定义结构，再填充内容）</td><td>内容优先（根据内容动态调整）</td></tr><tr><td><strong>控制方式</strong></td><td>显式定义行和列</td><td>通过主轴和交叉轴控制</td></tr></tbody></table><hr><h3 id="七、兼容性" tabindex="-1"><strong>七、兼容性</strong> <a class="header-anchor" href="#七、兼容性" aria-label="Permalink to &quot;**七、兼容性**&quot;">​</a></h3><ul><li>所有现代浏览器（Chrome、Firefox、Safari、Edge）均支持 Grid。</li><li>IE 11 支持旧版语法（需前缀 <code>-ms-</code>），但功能有限。</li></ul><hr><h3 id="总结" tabindex="-1"><strong>总结</strong> <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;**总结**&quot;">​</a></h3><ul><li><strong>Grid 的核心优势</strong>：<br> 精准控制二维布局、代码简洁、响应式能力强。</li><li><strong>学习建议</strong>：<br> 从简单网格开始（如 <code>grid-template-columns: repeat(3, 1fr)</code>），逐步掌握轨道定义、命名区域和隐式网格。</li><li><strong>最佳实践</strong>：<br> 结合 <code>minmax()</code>、<code>auto-fit</code>/<code>auto-fill</code> 和媒体查询，实现高度自适应的布局。</li></ul>`,55)]))}const c=i(l,[["render",h]]);export{g as __pageData,c as default};
